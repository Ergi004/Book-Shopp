{"ast":null,"code":"const API_KEY = 'UGp7KONVJA2G59lxV9tymyyjpHGqOIqs';\nconst API_URL = 'https://api.nytimes.com/svc/books/v3/lists/combined-print-and-e-book-fiction';\nexport const getBooks = async () => {\n  try {\n    const response = await fetch(`${API_URL}?api-key=${API_KEY}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch books');\n    }\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    throw new Error('Error fetching books:', error);\n  }\n};","map":{"version":3,"names":["API_KEY","API_URL","getBooks","response","fetch","ok","Error","data","json","results","error"],"sources":["/home/administrator/Desktop/Book-Website/src/services/api.js"],"sourcesContent":["const API_KEY = 'UGp7KONVJA2G59lxV9tymyyjpHGqOIqs';\nconst API_URL = 'https://api.nytimes.com/svc/books/v3/lists/combined-print-and-e-book-fiction';\n\nexport const getBooks = async () => {\n    try {\n        const response = await fetch(`${API_URL}?api-key=${API_KEY}`);\n        if (!response.ok) {\n            throw new Error('Failed to fetch books');\n        }\n        const data = await response.json();\n        return data.results;\n    } catch (error) {\n        throw new Error('Error fetching books:', error);\n    }\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAAMC,OAAO,GAAG,8EAA8E;AAE9F,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,YAAWD,OAAQ,EAAC,CAAC;IAC7D,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC5C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIJ,KAAK,CAAC,uBAAuB,EAAEI,KAAK,CAAC;EACnD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}